// Code generated by github.com/skipor/gmg - type-safe, fast and handy alternative GoMock generator. DO NOT EDIT.
// Source: github.com/skipor/gmg/examples/2_target_interface_select.First

package mocks_target_interface_selection

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// NewMockFirst creates a new GoMock for github.com/skipor/gmg/examples/2_target_interface_select.First.
func NewMockFirst(ctrl *gomock.Controller) *MockFirst {
	return &MockFirst{ctrl: ctrl}
}

// MockFirst is a GoMock of github.com/skipor/gmg/examples/2_target_interface_select.First.
type MockFirst struct{ ctrl *gomock.Controller }

// EXPECT returns GoMock recorder.
func (m_ *MockFirst) EXPECT() *MockFirstMockRecorder {
	return (*MockFirstMockRecorder)(m_)
}

// One implements mocked interface.
func (m_ *MockFirst) One() {
	m_.ctrl.T.Helper()
	m_.ctrl.Call(m_, "One")
	return
}

// MockFirstMockRecorder is the mock recorder for MockFirst.
type MockFirstMockRecorder MockFirst

//   One()
func (r_ *MockFirstMockRecorder) One() MockFirstOneCall {
	r_.ctrl.T.Helper()
	call := r_.ctrl.RecordCallWithMethodType(r_.mock(), "One", reflect.TypeOf((*MockFirst)(nil).One))
	return MockFirstOneCall{call}
}

// MockFirstOneCall is type safe wrapper of *gomock.Call.
type MockFirstOneCall struct{ *gomock.Call }

// DoAndReturn is type safe wrapper of *gomock.Call DoAndReturn.
func (c_ MockFirstOneCall) DoAndReturn(f func()) MockFirstOneCall {
	c_.Call.DoAndReturn(f)
	return c_
}

// Do is type safe wrapper of *gomock.Call Do.
func (c_ MockFirstOneCall) Do(f func()) MockFirstOneCall {
	c_.Call.Do(f)
	return c_
}

func (r_ *MockFirstMockRecorder) mock() *MockFirst {
	return (*MockFirst)(r_)
}
