// Code generated by github.com/skipor/gmg - type-safe, fast and handy alternative GoMock generator. DO NOT EDIT.
// Source: go.uber.org/zap/zapcore.Core

package example_mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	zapcore "go.uber.org/zap/zapcore"
)

// NewMockCore creates a new GoMock for go.uber.org/zap/zapcore.Core.
func NewMockCore(ctrl *gomock.Controller) *MockCore {
	return &MockCore{ctrl: ctrl}
}

// MockCore is a GoMock of go.uber.org/zap/zapcore.Core.
type MockCore struct{ ctrl *gomock.Controller }

// EXPECT returns GoMock recorder.
func (m_ *MockCore) EXPECT() *MockCoreMockRecorder {
	return (*MockCoreMockRecorder)(m_)
}

// Check implements mocked interface.
func (m_ *MockCore) Check(arg zapcore.Entry, arg2 *zapcore.CheckedEntry) *zapcore.CheckedEntry {
	m_.ctrl.T.Helper()
	res_ := m_.ctrl.Call(m_, "Check", arg, arg2)
	res0, _ := res_[0].(*zapcore.CheckedEntry)
	return res0
}

// Enabled implements mocked interface.
func (m_ *MockCore) Enabled(arg zapcore.Level) bool {
	m_.ctrl.T.Helper()
	res_ := m_.ctrl.Call(m_, "Enabled", arg)
	res0, _ := res_[0].(bool)
	return res0
}

// Sync implements mocked interface.
func (m_ *MockCore) Sync() error {
	m_.ctrl.T.Helper()
	res_ := m_.ctrl.Call(m_, "Sync")
	res0, _ := res_[0].(error)
	return res0
}

// With implements mocked interface.
func (m_ *MockCore) With(arg []zapcore.Field) zapcore.Core {
	m_.ctrl.T.Helper()
	res_ := m_.ctrl.Call(m_, "With", arg)
	res0, _ := res_[0].(zapcore.Core)
	return res0
}

// Write implements mocked interface.
func (m_ *MockCore) Write(arg zapcore.Entry, arg2 []zapcore.Field) error {
	m_.ctrl.T.Helper()
	res_ := m_.ctrl.Call(m_, "Write", arg, arg2)
	res0, _ := res_[0].(error)
	return res0
}

// MockCoreMockRecorder is the mock recorder for MockCore.
type MockCoreMockRecorder MockCore

// Check(zapcore.Entry, *zapcore.CheckedEntry) *zapcore.CheckedEntry
func (r_ *MockCoreMockRecorder) Check(arg interface{}, arg2 interface{}) MockCoreCheckCall {
	r_.ctrl.T.Helper()
	call := r_.ctrl.RecordCallWithMethodType(r_.mock(), "Check", reflect.TypeOf((*MockCore)(nil).Check), arg, arg2)
	return MockCoreCheckCall{call}
}

// MockCoreCheckCall is type safe wrapper of *gomock.Call.
type MockCoreCheckCall struct{ *gomock.Call }

// DoAndReturn is type safe wrapper of *gomock.Call DoAndReturn.
func (c_ MockCoreCheckCall) DoAndReturn(f func(arg zapcore.Entry, arg2 *zapcore.CheckedEntry) *zapcore.CheckedEntry) MockCoreCheckCall {
	c_.Call.DoAndReturn(f)
	return c_
}

// Do is type safe wrapper of *gomock.Call Do.
func (c_ MockCoreCheckCall) Do(f func(arg zapcore.Entry, arg2 *zapcore.CheckedEntry)) MockCoreCheckCall {
	c_.Call.Do(f)
	return c_
}

// Return is type safe wrapper of *gomock.Call Return.
func (c_ MockCoreCheckCall) Return(res0 *zapcore.CheckedEntry) MockCoreCheckCall {
	c_.Call.Return(res0)
	return c_
}

// Enabled(zapcore.Level) bool
func (r_ *MockCoreMockRecorder) Enabled(arg interface{}) MockCoreEnabledCall {
	r_.ctrl.T.Helper()
	call := r_.ctrl.RecordCallWithMethodType(r_.mock(), "Enabled", reflect.TypeOf((*MockCore)(nil).Enabled), arg)
	return MockCoreEnabledCall{call}
}

// MockCoreEnabledCall is type safe wrapper of *gomock.Call.
type MockCoreEnabledCall struct{ *gomock.Call }

// DoAndReturn is type safe wrapper of *gomock.Call DoAndReturn.
func (c_ MockCoreEnabledCall) DoAndReturn(f func(arg zapcore.Level) bool) MockCoreEnabledCall {
	c_.Call.DoAndReturn(f)
	return c_
}

// Do is type safe wrapper of *gomock.Call Do.
func (c_ MockCoreEnabledCall) Do(f func(arg zapcore.Level)) MockCoreEnabledCall {
	c_.Call.Do(f)
	return c_
}

// Return is type safe wrapper of *gomock.Call Return.
func (c_ MockCoreEnabledCall) Return(res0 bool) MockCoreEnabledCall {
	c_.Call.Return(res0)
	return c_
}

// Sync() error
func (r_ *MockCoreMockRecorder) Sync() MockCoreSyncCall {
	r_.ctrl.T.Helper()
	call := r_.ctrl.RecordCallWithMethodType(r_.mock(), "Sync", reflect.TypeOf((*MockCore)(nil).Sync))
	return MockCoreSyncCall{call}
}

// MockCoreSyncCall is type safe wrapper of *gomock.Call.
type MockCoreSyncCall struct{ *gomock.Call }

// DoAndReturn is type safe wrapper of *gomock.Call DoAndReturn.
func (c_ MockCoreSyncCall) DoAndReturn(f func() error) MockCoreSyncCall {
	c_.Call.DoAndReturn(f)
	return c_
}

// Do is type safe wrapper of *gomock.Call Do.
func (c_ MockCoreSyncCall) Do(f func()) MockCoreSyncCall {
	c_.Call.Do(f)
	return c_
}

// Return is type safe wrapper of *gomock.Call Return.
func (c_ MockCoreSyncCall) Return(res0 error) MockCoreSyncCall {
	c_.Call.Return(res0)
	return c_
}

// With([]zapcore.Field) zapcore.Core
func (r_ *MockCoreMockRecorder) With(arg interface{}) MockCoreWithCall {
	r_.ctrl.T.Helper()
	call := r_.ctrl.RecordCallWithMethodType(r_.mock(), "With", reflect.TypeOf((*MockCore)(nil).With), arg)
	return MockCoreWithCall{call}
}

// MockCoreWithCall is type safe wrapper of *gomock.Call.
type MockCoreWithCall struct{ *gomock.Call }

// DoAndReturn is type safe wrapper of *gomock.Call DoAndReturn.
func (c_ MockCoreWithCall) DoAndReturn(f func(arg []zapcore.Field) zapcore.Core) MockCoreWithCall {
	c_.Call.DoAndReturn(f)
	return c_
}

// Do is type safe wrapper of *gomock.Call Do.
func (c_ MockCoreWithCall) Do(f func(arg []zapcore.Field)) MockCoreWithCall {
	c_.Call.Do(f)
	return c_
}

// Return is type safe wrapper of *gomock.Call Return.
func (c_ MockCoreWithCall) Return(res0 zapcore.Core) MockCoreWithCall {
	c_.Call.Return(res0)
	return c_
}

// Write(zapcore.Entry, []zapcore.Field) error
func (r_ *MockCoreMockRecorder) Write(arg interface{}, arg2 interface{}) MockCoreWriteCall {
	r_.ctrl.T.Helper()
	call := r_.ctrl.RecordCallWithMethodType(r_.mock(), "Write", reflect.TypeOf((*MockCore)(nil).Write), arg, arg2)
	return MockCoreWriteCall{call}
}

// MockCoreWriteCall is type safe wrapper of *gomock.Call.
type MockCoreWriteCall struct{ *gomock.Call }

// DoAndReturn is type safe wrapper of *gomock.Call DoAndReturn.
func (c_ MockCoreWriteCall) DoAndReturn(f func(arg zapcore.Entry, arg2 []zapcore.Field) error) MockCoreWriteCall {
	c_.Call.DoAndReturn(f)
	return c_
}

// Do is type safe wrapper of *gomock.Call Do.
func (c_ MockCoreWriteCall) Do(f func(arg zapcore.Entry, arg2 []zapcore.Field)) MockCoreWriteCall {
	c_.Call.Do(f)
	return c_
}

// Return is type safe wrapper of *gomock.Call Return.
func (c_ MockCoreWriteCall) Return(res0 error) MockCoreWriteCall {
	c_.Call.Return(res0)
	return c_
}

func (r_ *MockCoreMockRecorder) mock() *MockCore {
	return (*MockCore)(r_)
}
