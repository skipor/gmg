// Code generated by github.com/skipor/gmg - type-safe, fast and handy alternative GoMock generator. DO NOT EDIT.
// Source: io.Writer

package mocks_io

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// NewMockWriter creates a new GoMock for io.Writer.
func NewMockWriter(ctrl *gomock.Controller) *MockWriter {
	return &MockWriter{ctrl: ctrl}
}

// MockWriter is a GoMock of io.Writer.
type MockWriter struct{ ctrl *gomock.Controller }

// EXPECT returns GoMock recorder.
func (m_ *MockWriter) EXPECT() *MockWriterMockRecorder {
	return (*MockWriterMockRecorder)(m_)
}

// Write implements mocked interface.
func (m_ *MockWriter) Write(p []byte) (n int, err error) {
	m_.ctrl.T.Helper()
	res_ := m_.ctrl.Call(m_, "Write", p)
	n, _ = res_[0].(int)
	err, _ = res_[1].(error)
	return n, err
}

// MockWriterMockRecorder is the mock recorder for MockWriter.
type MockWriterMockRecorder MockWriter

//   Write(p []byte) (n int, err error)
func (r_ *MockWriterMockRecorder) Write(p interface{}) MockWriterWriteCall {
	r_.ctrl.T.Helper()
	call := r_.ctrl.RecordCallWithMethodType(r_.mock(), "Write", reflect.TypeOf((*MockWriter)(nil).Write), p)
	return MockWriterWriteCall{call}
}

// MockWriterWriteCall is type safe wrapper of *gomock.Call.
type MockWriterWriteCall struct{ *gomock.Call }

// DoAndReturn is type safe wrapper of *gomock.Call DoAndReturn.
func (c_ MockWriterWriteCall) DoAndReturn(f func(p []byte) (n int, err error)) MockWriterWriteCall {
	c_.Call.DoAndReturn(f)
	return c_
}

// Do is type safe wrapper of *gomock.Call Do.
func (c_ MockWriterWriteCall) Do(f func(p []byte)) MockWriterWriteCall {
	c_.Call.Do(f)
	return c_
}

// Return is type safe wrapper of *gomock.Call Return.
func (c_ MockWriterWriteCall) Return(n int, err error) MockWriterWriteCall {
	c_.Call.Return(n, err)
	return c_
}

func (r_ *MockWriterMockRecorder) mock() *MockWriter {
	return (*MockWriter)(r_)
}
