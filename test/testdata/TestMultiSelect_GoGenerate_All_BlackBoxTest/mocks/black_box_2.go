// Code generated by github.com/skipor/gmg - type-safe, fast and handy alternative GoMock generator. DO NOT EDIT.
// Source: repo/pkg_test.BlackBox2

package mocks_pkg

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// NewMockBlackBox2 creates a new GoMock for repo/pkg_test.BlackBox2.
func NewMockBlackBox2(ctrl *gomock.Controller) *MockBlackBox2 {
	return &MockBlackBox2{ctrl: ctrl}
}

// MockBlackBox2 is a GoMock of repo/pkg_test.BlackBox2.
type MockBlackBox2 struct{ ctrl *gomock.Controller }

// EXPECT returns GoMock recorder.
func (m_ *MockBlackBox2) EXPECT() *MockBlackBox2MockRecorder {
	return (*MockBlackBox2MockRecorder)(m_)
}

// BB2 implements mocked interface.
func (m_ *MockBlackBox2) BB2() {
	m_.ctrl.T.Helper()
	m_.ctrl.Call(m_, "BB2")
	return
}

// MockBlackBox2MockRecorder is the mock recorder for MockBlackBox2.
type MockBlackBox2MockRecorder MockBlackBox2

//   BB2()
func (r_ *MockBlackBox2MockRecorder) BB2() MockBlackBox2BB2Call {
	r_.ctrl.T.Helper()
	call := r_.ctrl.RecordCallWithMethodType(r_.mock(), "BB2", reflect.TypeOf((*MockBlackBox2)(nil).BB2))
	return MockBlackBox2BB2Call{call}
}

// MockBlackBox2BB2Call is type safe wrapper of *gomock.Call.
type MockBlackBox2BB2Call struct{ *gomock.Call }

// DoAndReturn is type safe wrapper of *gomock.Call DoAndReturn.
func (c_ MockBlackBox2BB2Call) DoAndReturn(f func()) MockBlackBox2BB2Call {
	c_.Call.DoAndReturn(f)
	return c_
}

// Do is type safe wrapper of *gomock.Call Do.
func (c_ MockBlackBox2BB2Call) Do(f func()) MockBlackBox2BB2Call {
	c_.Call.Do(f)
	return c_
}

func (r_ *MockBlackBox2MockRecorder) mock() *MockBlackBox2 {
	return (*MockBlackBox2)(r_)
}
